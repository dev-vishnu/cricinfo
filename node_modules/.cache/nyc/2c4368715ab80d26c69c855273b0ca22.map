{"version":3,"sources":["search_Routes.js"],"names":["search","get","req","res","searchTerm","query","playerData","render","players","winston","logger","info"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,sBAAf;;AAEAA,OAAOC,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,sBAFM,GAEOF,IAAIG,KAFX;AAAA;AAAA,mBAGa,8CAAsBD,WAAWJ,MAAjC,CAHb;;AAAA;AAGNM,sBAHM;;AAIZH,gBAAII,MAAJ,CAAW,SAAX,EAAsB,EAAEC,SAASF,WAAW,CAAX,CAAX,EAAtB;AAJY;AAAA;;AAAA;AAAA;AAAA;;AAMZG,qCAAQC,MAAR,CAAeC,IAAf;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;kBAUeX,M","file":"search_Routes.js","sourceRoot":"/home/dev/project-players-01/src/router","sourcesContent":["import { Router } from 'express';\nimport { getPlayerDataBySearch } from '../controller/playersController';\nimport winston from '../common/winston_config';\n\nconst search = Router();\n\nsearch.get('/', async (req, res) => {\n  try {\n    const searchTerm = req.query;\n    const playerData = await getPlayerDataBySearch(searchTerm.search);\n    res.render('players', { players: playerData[0] });\n  } catch (err) {\n    winston.logger.info(err);\n  }\n});\n\nexport default search;\n"]}