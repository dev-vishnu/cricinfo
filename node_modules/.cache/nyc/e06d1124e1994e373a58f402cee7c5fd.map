{"version":3,"sources":["passport_strategy.js"],"names":["LocalStrategy","require","Strategy","passportConfig","passport","use","username","password","done","axios","post","token","result","data","serializeUser","winston","logger","info","deserializeUser","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAMA,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;AAGA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAAA;;AAChCA,WAASC,GAAT,CAAa,IAAIL,aAAJ;AAAA,uEACV,iBAAOM,QAAP,EAAiBC,QAAjB,EAA2BC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEwBC,gBAAMC,IAAN,CAAW,6BAAX,EAA0C,EAAEJ,kBAAF,EAAYC,kBAAZ,EAAsBI,2BAAtB,EAA1C,CAFxB;;AAAA;AAESC,oBAFT;;AAAA,kBAGSA,OAAOC,IAHhB;AAAA;AAAA;AAAA;;AAAA,+CAIYL,KAAK,IAAL,EAAW,KAAX,CAJZ;;AAAA;AAAA,+CAMUA,KAAK,IAAL,EAAWI,OAAOC,IAAlB,CANV;;AAAA;AAAA;AAAA;AAAA,+CAQUL,kBAAU,KAAV,CARV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADU;;AAAA;AAAA;AAAA;AAAA,MAAb;;AAcAJ,WAASU,aAAT,CAAuB,UAACR,QAAD,EAAWE,IAAX,EAAoB;AACzC,QAAI,CAACF,QAAL,EAAe;AACbE,WAAK,IAAL,EAAW,KAAX;AACD;AACDO,6BAAQC,MAAR,CAAeC,IAAf,CAAuBX,QAAvB;AACAE,SAAK,IAAL,EAAWF,QAAX;AACD,GAND;;AAQAF,WAASc,eAAT;AAAA,wEAAyB,kBAAOZ,QAAP,EAAiBE,IAAjB;AAAA;AAAA;AAAA;AAAA;AACvB,kBAAI,CAACF,QAAL,EAAe;AACbE,qBAAK,IAAL,EAAW,KAAX;AACD,eAFD,MAEO;AACL,oBAAI;AACFA,uBAAK,IAAL,EAAWF,QAAX;AACD,iBAFD,CAEE,OAAOa,GAAP,EAAY;AACZJ,2CAAQC,MAAR,CAAeC,IAAf,CAAoBE,GAApB;AACAX,uBAAKW,GAAL,EAAUb,QAAV;AACD;AACF;;AAVsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB;;AAAA;AAAA;AAAA;AAAA;AAYD;;kBAEcH,c","file":"passport_strategy.js","sourceRoot":"/home/dev/project-players-01/src/common","sourcesContent":["import axios from 'axios';\nimport token from './auth_token';\nimport winston from './winston_config';\n\nconst LocalStrategy = require('passport-local').Strategy;\n\n\nfunction passportConfig(passport) {\n  passport.use(new LocalStrategy(\n    (async (username, password, done) => {\n      try {\n        const result = await axios.post('http://localhost:3000/login', { username, password, token });\n        if (!(result.data)) {\n          return done(null, false);\n        }\n        return done(null, result.data);\n      } catch (err) {\n        return done(err, false);\n      }\n    }),\n  ));\n\n  passport.serializeUser((username, done) => {\n    if (!username) {\n      done(null, false);\n    }\n    winston.logger.info(`${username} logged in`);\n    done(null, username);\n  });\n\n  passport.deserializeUser(async (username, done) => {\n    if (!username) {\n      done(null, false);\n    } else {\n      try {\n        done(null, username);\n      } catch (err) {\n        winston.logger.info(err);\n        done(err, username);\n      }\n    }\n  });\n}\n\nexport default passportConfig;\n"]}