{"version":3,"sources":["playersController.js"],"names":["result","config","connection","execute","query","querySelectAllPlayers","end","winston","logger","info","getPlayerData","id","querySelectAllPlayerById","getPlayerById","pid","apiKey","getPlayerStats","searchTerm","querySearchPlayer","getPlayerDataBySearch"],"mappings":";;;;;;;;qEAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACMA,kBADN;AAAA;AAAA;AAAA,mBAG6B,+BAAiBC,kBAAjB,CAH7B;;AAAA;AAGUC,sBAHV;AAAA;AAAA,mBAImBA,WAAWC,OAAX,CAAmBC,kBAAMC,qBAAzB,CAJnB;;AAAA;AAIIL,kBAJJ;AAAA;AAAA,mBAKUE,WAAWI,GAAX,EALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOIC,qCAAQC,MAAR,CAAeC,IAAf;;AAPJ;AAAA,6CASST,MATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeU,a;;;;;;sEAaf,kBAA6BC,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMX,kBADN;AAAA;AAAA;AAAA,mBAG6B,+BAAiBC,kBAAjB,CAH7B;;AAAA;AAGUC,sBAHV;AAAA;AAAA,mBAImBA,WAAWC,OAAX,CAAmBC,kBAAMQ,wBAAzB,EAAmD,CAACD,EAAD,CAAnD,CAJnB;;AAAA;AAIIX,kBAJJ;AAAA;AAAA,mBAKUE,WAAWI,GAAX,EALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOIC,qCAAQC,MAAR,CAAeC,IAAf;;AAPJ;AAAA,8CASST,MATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAea,a;;;;;;sEAYf,kBAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,kBADR,GACkB,8BADlB;AAEMf,kBAFN;AAAA;AAAA;AAAA,mBAImB,gEAAkDe,MAAlD,aAAgED,GAAhE,CAJnB;;AAAA;AAIId,kBAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMIO,qCAAQC,MAAR,CAAeC,IAAf;;AANJ;AAAA,8CAQST,MART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAegB,c;;;;;;sEAWf,kBAAqCC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMjB,kBADN;AAAA;AAAA;AAAA,mBAG6B,+BAAiBC,kBAAjB,CAH7B;;AAAA;AAGUC,sBAHV;AAAA;AAAA,mBAImBA,WAAWC,OAAX,CAAmBC,kBAAMc,iBAAzB,EAA4C,CAACD,UAAD,CAA5C,CAJnB;;AAAA;AAIIjB,kBAJJ;AAAA;AAAA,mBAKUE,WAAWI,GAAX,EALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOIC,qCAAQC,MAAR,CAAeC,IAAf;AAPJ,8CAQW,KARX;;AAAA;AAAA,8CAUST,MAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAemB,qB;;;;;AA1Cf;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;QAoDEA,qB,GAAAA,qB;QAAuBH,c,GAAAA,c;QAAgBN,a,GAAAA,a;QAAeG,a,GAAAA,a","file":"playersController.js","sourceRoot":"/home/dev/project-players-01/src/controller","sourcesContent":["import { createConnection } from 'mysql2/promise';\nimport { get } from 'axios';\nimport config from '../config/dbConfig';\nimport query from '../models/sql_queries/queries';\nimport winston from '../common/winston_config';\n\nasync function getPlayerData() {\n  let result;\n  try {\n    const connection = await createConnection(config);\n    result = await connection.execute(query.querySelectAllPlayers);\n    await connection.end();\n  } catch (error) {\n    winston.logger.info(error);\n  }\n  return result;\n}\n\n\nasync function getPlayerById(id) {\n  let result;\n  try {\n    const connection = await createConnection(config);\n    result = await connection.execute(query.querySelectAllPlayerById, [id]);\n    await connection.end();\n  } catch (err) {\n    winston.logger.info(err);\n  }\n  return result;\n}\n\nasync function getPlayerStats(pid) {\n  const apiKey = ('7u62tyv5a8S8BhXI8e3nwpiDUk62');\n  let result;\n  try {\n    result = await get(`https://cricapi.com/api/playerStats?apikey=${apiKey}&pid=${pid}`);\n  } catch (err) {\n    winston.logger.info(err);\n  }\n  return result;\n}\n\nasync function getPlayerDataBySearch(searchTerm) {\n  let result;\n  try {\n    const connection = await createConnection(config);\n    result = await connection.execute(query.querySearchPlayer, [searchTerm]);\n    await connection.end();\n  } catch (error) {\n    winston.logger.info(error);\n    return false;\n  }\n  return result;\n}\n\nexport {\n  getPlayerDataBySearch, getPlayerStats, getPlayerData, getPlayerById,\n};\n"]}