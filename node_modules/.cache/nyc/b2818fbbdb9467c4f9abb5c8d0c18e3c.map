{"version":3,"sources":["auth_Routes.js"],"names":["auth","get","req","res","render","post","user","body","registerUrl","axios","username","password","token","result","data","redirect","winston","logger","info","passport","authenticate","successRedirect","failureRedirect","logout"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;AAGA,IAAMA,OAAO,sBAAb;;AAEAA,KAAKC,GAAL,CAAS,GAAT,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,MAAJ,CAAW,OAAX;AACD,CAFD;;AAIAJ,KAAKC,GAAL,CAAS,QAAT,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/BA,MAAIC,MAAJ,CAAW,OAAX;AACD,CAFD;;AAIAJ,KAAKC,GAAL,CAAS,SAAT,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,MAAIC,MAAJ,CAAW,QAAX;AACD,CAFD;;AAIAJ,KAAKK,IAAL,CAAU,WAAV;AAAA,qEAAuB,iBAAOH,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfG,gBADe,GACRJ,IAAIK,IADI;AAEfC,uBAFe,GAED,gCAFC;AAAA;AAAA,mBAGAC,gBAAMJ,IAAN,CAAWG,WAAX,EACnB,EAAEE,UAAUJ,KAAKI,QAAjB,EAA2BC,UAAUL,KAAKK,QAA1C,EAAoDC,2BAApD,EADmB,CAHA;;AAAA;AAGfC,kBAHe;;;AAMrB,gBAAI,CAACA,OAAOC,IAAZ,EAAkB;AAChBX,kBAAIY,QAAJ,CAAa,GAAb;AACD,aAFD,MAEO;AACLC,uCAAQC,MAAR,CAAeC,IAAf,CAAuBL,OAAOC,IAAP,CAAYJ,QAAnC;AACAP,kBAAIY,QAAJ,CAAa,GAAb;AACD;;AAXoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAcAf,KAAKK,IAAL,CAAU,QAAV,EAAoBc,mBAASC,YAAT,CAAsB,OAAtB,EAClB,EAAEC,iBAAiB,OAAnB,EAA4BC,iBAAiB,GAA7C,EADkB,CAApB,EACuD,UAACpB,GAAD,EAAMC,GAAN,EAAc;AACnEA,MAAIY,QAAJ,CAAa,OAAb;AACD,CAHD;;AAKAf,KAAKC,GAAL,CAAS,SAAT,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCD,MAAIqB,MAAJ;AACApB,MAAIY,QAAJ,CAAa,GAAb;AACD,CAHD;;kBAKef,I","file":"auth_Routes.js","sourceRoot":"/home/dev/project-players-01/src/router","sourcesContent":["import { Router } from 'express';\nimport passport from 'passport';\nimport axios from 'axios';\n\nimport token from '../common/auth_token';\nimport winston from '../common/winston_config';\n\n\nconst auth = Router();\n\nauth.get('/', (req, res) => {\n  res.render('login');\n});\n\nauth.get('/login', (req, res) => {\n  res.render('login');\n});\n\nauth.get('/signUp', (req, res) => {\n  res.render('signUp');\n});\n\nauth.post('/register', async (req, res) => {\n  const user = req.body;\n  const registerUrl = 'http://localhost:3000/register';\n  const result = await axios.post(registerUrl,\n    { username: user.username, password: user.password, token });\n\n  if (!result.data) {\n    res.redirect('/');\n  } else {\n    winston.logger.info(`${result.data.username} Registered`);\n    res.redirect('/');\n  }\n});\n\nauth.post('/login', passport.authenticate('local',\n  { successRedirect: '/home', failureRedirect: '/' }), (req, res) => {\n  res.redirect('/home');\n});\n\nauth.get('/logout', (req, res) => {\n  req.logout();\n  res.redirect('/');\n});\n\nexport default auth;\n"]}