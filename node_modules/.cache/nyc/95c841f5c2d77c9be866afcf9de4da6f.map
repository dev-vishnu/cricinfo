{"version":3,"sources":["players_Routes.js"],"names":["players","get","req","res","config","playerData","render","winston","logger","info","playerID","params","id","player","pid","playerstats","data","bowlingstats","bowling","battingstats","batting"],"mappings":";;;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;;;AAGA,IAAMA,UAAU,sBAAhB;;AAEAA,QAAQC,GAAR,CAAY,GAAZ;AAAA,qEAAiB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEY,sCAAcC,kBAAd,CAFZ;;AAAA;AAEPC,sBAFO;;AAGbF,gBAAIG,MAAJ,CAAW,SAAX,EAAsB,EAAEN,SAASK,WAAW,CAAX,CAAX,EAAtB;AAHa;AAAA;;AAAA;AAAA;AAAA;;AAKbE,qCAAQC,MAAR,CAAeC,IAAf;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AASAT,QAAQC,GAAR,CAAY,MAAZ;AAAA,sEAAoB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVO,oBAFU,GAECR,IAAIS,MAAJ,CAAWC,EAFZ;AAAA;AAAA,mBAGK,sCAAcF,QAAd,EAAwBN,kBAAxB,CAHL;;AAAA;AAGVS,kBAHU;AAAA;AAAA,mBAIW,uCAAeA,OAAO,CAAP,EAAU,CAAV,EAAaC,GAA5B,CAJX;;AAAA;AAIVC,uBAJU,kBAI6CC,IAJ7C;AAKVC,wBALU,GAKKF,YAAYC,IAAZ,CAAiBE,OALtB;AAMVC,wBANU,GAMKJ,YAAYC,IAAZ,CAAiBI,OANtB;;AAOhBjB,gBAAIG,MAAJ,CAAW,eAAX,EACE;AACEO,sBAAQA,OAAO,CAAP,EAAU,CAAV,CADV,EACwBE,wBADxB,EACqCE,0BADrC,EACmDE;AADnD,aADF;AAPgB;AAAA;;AAAA;AAAA;AAAA;;AAYhBZ,qCAAQC,MAAR,CAAeC,IAAf;;AAZgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;kBAiBeT,O","file":"players_Routes.js","sourceRoot":"/home/dev/project-players-01/src/router","sourcesContent":["\nimport { Router } from 'express';\nimport config from '../config/dbConfig';\nimport { getPlayerData, getPlayerById, getPlayerStats } from '../controller/playersController';\nimport winston from '../common/winston_config';\n\n\nconst players = Router();\n\nplayers.get('/', async (req, res) => {\n  try {\n    const playerData = await getPlayerData(config);\n    res.render('players', { players: playerData[0] });\n  } catch (err) {\n    winston.logger.info(err);\n  }\n});\n\nplayers.get('/:id', async (req, res) => {\n  try {\n    const playerID = req.params.id;\n    const player = await getPlayerById(playerID, config);\n    const playerstats = (await getPlayerStats(player[0][0].pid)).data;\n    const bowlingstats = playerstats.data.bowling;\n    const battingstats = playerstats.data.batting;\n    res.render('playerdetails',\n      {\n        player: player[0][0], playerstats, bowlingstats, battingstats,\n      });\n  } catch (err) {\n    winston.logger.info(err);\n  }\n});\n\n\nexport default players;\n"]}